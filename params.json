{
  "name": "Android-shell",
  "tagline": "Execute shell commands on Android.",
  "body": "# Android Shell\r\n\r\n<img src=\"https://github.com/jrummyapps/android-shell/blob/master/demo/src/main/res/mipmap-xxxhdpi/ic_launcher.png?raw=true\" align=\"left\" hspace=\"10\" vspace=\"10\"></a>\r\n\r\nExecute shell commands on Android.\r\n\r\n<a target=\"_blank\" href=\"https://developer.android.com/reference/android/os/Build.VERSION_CODES.html\"><img src=\"https://img.shields.io/badge/API-14%2B-blue.svg?style=flat\" alt=\"API\" /></a>\r\n<a target=\"_blank\" href=\"LICENSE\"><img src=\"http://img.shields.io/:license-apache-blue.svg\" alt=\"License\" /></a>\r\n<a target=\"_blank\" href=\"https://maven-badges.herokuapp.com/maven-central/com.jrummyapps/android-shell\"><img src=\"https://maven-badges.herokuapp.com/maven-central/com.jrummyapps/android-shell/badge.svg\" alt=\"Maven Central\" /></a>\r\n<a target=\"_blank\" href=\"http://www.methodscount.com/?lib=com.jrummyapps%3Aandroid-shell%3A1.0.0\"><img src=\"https://img.shields.io/badge/methods-231-e91e63.svg\" /></a>\r\n<a target=\"_blank\" href=\"http://www.methodscount.com/?lib=com.jrummyapps%3Aandroid-shell%3A1.0.0\"><img src=\"https://img.shields.io/badge/Size-32 KB-e91e63.svg\"/></a>\r\n<a target=\"_blank\" href=\"https://twitter.com/jrummyapps\"><img src=\"https://img.shields.io/twitter/follow/jrummyapps.svg?style=social\" /></a>\r\n\r\nDownload [the latest AAR](https://repo1.maven.org/maven2/com/jrummyapps/android-shell/1.0.0/android-processes-1.0.0.aar) or grab via Gradle:\r\n\r\n```groovy\r\ncompile 'com.jrummyapps:android-shell:1.0.0'\r\n```\r\n<br>\r\n\r\n\r\nUsage\r\n-----\r\n\r\nCommon utility functions include:\r\n\r\n```java\r\nCommandResult Shell.run(String shell, String... commands)\r\nCommandResult Shell.SH.run(String... commands)\r\nCommandResult Shell.SU.run(String... commands)\r\n```\r\n\r\nThe result will contains the exit code, standard output (stdout), and standard error (stderr).\r\n\r\nExample of running a command as root:\r\n\r\n```java\r\nCommandResult result = Shell.SU.run(\"id\");\r\nif (result.isSuccessful()) {\r\n  System.out.println(result.getStdout());\r\n  // Example output on a rooted device:\r\n  // uid=0(root) gid=0(root) groups=0(root) context=u:r:init:s0\r\n}\r\n```\r\n\r\nYou can open multiple shell instances using `Shell.Builder` or `Shell.Console.Builder`. Calling `Shell.SU.run(String... commands)` will keep a su session open in the background so additional calls will not create new superuser requests.\r\n\r\nFore more information please see http://su.chainfire.eu/\r\n\r\nAcknowledgements\r\n----------------\r\n\r\n[libsuperuser](https://github.com/Chainfire/libsuperuser) by [Chainfire](https://twitter.com/ChainfireXDA)\r\n\r\nLicense\r\n-------\r\n\r\n    Copyright (C) 2016 JRummy Apps Inc.\r\n    Copyright (C) 2012-2015 Jorrit \"Chainfire\" Jongma\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}